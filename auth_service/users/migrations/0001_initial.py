# Generated by Django 5.2.5 on 2025-08-26 11:03

import django.db.models.deletion
import django.utils.timezone
import users.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0004_tenant_logo_tenant_title'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_password_reset', models.DateTimeField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('co-admin', 'Co-Admin'), ('hr', 'HR'), ('carer', 'Carer'), ('client', 'Client'), ('family', 'Family'), ('auditor', 'Auditor'), ('tutor', 'Tutor'), ('assessor', 'Assessor'), ('iqa', 'IQA'), ('eqa', 'EQA'), ('recruiter', 'Recruiter'), ('team_manager', 'Team Manager')], default='carer', max_length=20)),
                ('permission_levels', models.JSONField(blank=True, default=list)),
                ('job_role', models.CharField(blank=True, default='staff', max_length=255, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.branch')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('personal_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=20, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_id', models.CharField(blank=True, max_length=15, null=True)),
                ('government_id_type', models.CharField(blank=True, choices=[('Drivers Licence', 'Drivers Licence')], max_length=50)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed'), ('Others', 'Others')], max_length=50)),
                ('id_number', models.CharField(blank=True, max_length=20)),
                ('document_number', models.CharField(blank=True, max_length=20)),
                ('document_expiry_date', models.DateField(blank=True, null=True)),
                ('image_file', models.ImageField(blank=True, null=True, upload_to='id_documents/')),
                ('is_driver', models.BooleanField(default=False)),
                ('type_of_vehicle', models.CharField(blank=True, max_length=50)),
                ('drivers_licence_image1', models.ImageField(blank=True, null=True, upload_to='driver_licences/')),
                ('drivers_licence_image2', models.ImageField(blank=True, null=True, upload_to='driver_licences/')),
                ('drivers_licence_country_of_issue', models.CharField(blank=True, max_length=100)),
                ('drivers_licence_date_issue', models.DateField(blank=True, null=True)),
                ('drivers_licence_expiry_date', models.DateField(blank=True, null=True)),
                ('drivers_license_insurance_provider', models.CharField(blank=True, max_length=100)),
                ('drivers_licence_insurance_expiry_date', models.DateField(blank=True, null=True)),
                ('drivers_licence_issuing_authority', models.CharField(blank=True, max_length=20)),
                ('drivers_licence_policy_number', models.CharField(blank=True, max_length=100)),
                ('assessor_name', models.CharField(blank=True, max_length=255)),
                ('manual_handling_risk', models.CharField(blank=True, choices=[('Low', 'Low')], max_length=50)),
                ('lone_working_risk', models.CharField(blank=True, choices=[('Low', 'Low')], max_length=50)),
                ('infection_risk', models.CharField(blank=True, choices=[('Low', 'Low')], max_length=50)),
                ('next_of_kin', models.CharField(blank=True, max_length=255)),
                ('next_of_kin_address', models.CharField(blank=True, max_length=255)),
                ('next_of_kin_phone_number', models.CharField(blank=True, max_length=15)),
                ('next_of_kin_alternate_phone', models.CharField(blank=True, max_length=15)),
                ('relationship_to_next_of_kin', models.CharField(blank=True, max_length=100)),
                ('next_of_kin_email', models.EmailField(blank=True, max_length=254)),
                ('next_of_kin_town', models.CharField(blank=True, max_length=15)),
                ('next_of_kin_zip_code', models.CharField(blank=True, max_length=20, null=True)),
                ('Right_to_Work_status', models.CharField(blank=True, max_length=100)),
                ('Right_to_Work_passport_holder', models.CharField(blank=True, max_length=100, null=True)),
                ('Right_to_Work_document_type', models.CharField(blank=True, choices=[('Biometric Residence Permit', 'Biometric Residence Permit'), ('Passport', 'Passport'), ('National ID', 'National ID')], max_length=100)),
                ('Right_to_Work_share_code', models.CharField(blank=True, max_length=20)),
                ('Right_to_Work_document_number', models.CharField(blank=True, max_length=100)),
                ('Right_to_Work_document_expiry_date', models.DateField(blank=True, null=True)),
                ('Right_to_Work_file', models.ImageField(blank=True, null=True, upload_to='right_to_work/')),
                ('Right_to_Work_country_of_issue', models.CharField(blank=True, max_length=100)),
                ('Right_to_Work_restrictions', models.CharField(blank=True, max_length=255)),
                ('dbs_type', models.CharField(blank=True, max_length=100)),
                ('dbs_certificate', models.ImageField(blank=True, null=True, upload_to='dbs_certificates/')),
                ('dbs_certificate_number', models.CharField(blank=True, max_length=100)),
                ('dbs_issue_date', models.DateField(blank=True, null=True)),
                ('dbs_update_file', models.ImageField(blank=True, null=True, upload_to='dbs_update_service/')),
                ('dbs_update_certificate_number', models.CharField(blank=True, max_length=100)),
                ('dbs_update_issue_date', models.DateField(blank=True, null=True)),
                ('dbs_status_check', models.BooleanField(default=False)),
                ('bank_name', models.CharField(blank=True, max_length=255)),
                ('account_number', models.CharField(blank=True, max_length=20)),
                ('account_name', models.CharField(blank=True, max_length=255)),
                ('account_type', models.CharField(blank=True, choices=[('Current', 'Current'), ('Savings', 'Savings'), ('Business', 'Business')], max_length=50)),
                ('access_duration', models.DateField(blank=True, default=users.models.today)),
                ('system_access_rostering', models.BooleanField(default=False)),
                ('system_access_hr', models.BooleanField(default=False)),
                ('system_access_recruitment', models.BooleanField(default=False)),
                ('system_access_training', models.BooleanField(default=False)),
                ('system_access_finance', models.BooleanField(default=False)),
                ('system_access_compliance', models.BooleanField(default=False)),
                ('system_access_co_superadmin', models.BooleanField(default=False)),
                ('system_access_asset_management', models.BooleanField(default=False)),
                ('vehicle_type', models.CharField(blank=True, choices=[('Personal Vehicle', 'Personal Vehicle'), ('Company Vehicle', 'Company Vehicle'), ('Both', 'Both')], max_length=50)),
                ('modules', models.ManyToManyField(blank=True, to='core.module')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='ReferenceCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('relationship_to_applicant', models.CharField(max_length=100)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_checks', to='users.userprofile')),
            ],
            options={
                'verbose_name': 'Reference Check',
                'verbose_name_plural': 'Reference Checks',
            },
        ),
        migrations.CreateModel(
            name='ProofOfAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('utility_bill', 'Utility Bill'), ('bank_statement', 'Bank Statement'), ('tenancy_agreement', 'Tenancy Agreement')], max_length=50)),
                ('document', models.ImageField(blank=True, null=True, upload_to='proof_of_address/')),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('nin', models.CharField(blank=True, max_length=20, null=True, verbose_name='National Insurance Number (NIN)')),
                ('nin_document', models.ImageField(blank=True, null=True, upload_to='nin_documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proof_of_address', to='users.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image_file', models.ImageField(blank=True, null=True, upload_to='professional_qualifications/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_qualifications', to='users.userprofile')),
            ],
            options={
                'verbose_name_plural': 'Professional Qualifications',
            },
        ),
        migrations.CreateModel(
            name='OtherUserDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('government_id_type', models.CharField(blank=True, max_length=100)),
                ('document_number', models.CharField(blank=True, max_length=20)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('file', models.ImageField(blank=True, null=True, upload_to='other_user_documents')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_user_documents', to='users.userprofile')),
            ],
            options={
                'verbose_name': 'User Document',
                'verbose_name_plural': 'User Documents',
            },
        ),
        migrations.CreateModel(
            name='LegalWorkEligibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evidence_of_right_to_rent', models.BooleanField(default=False)),
                ('document', models.ImageField(blank=True, null=True, upload_to='legal_work_docs/')),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legal_work_eligibilities', to='users.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_type', models.CharField(choices=[('public_liability', 'Public Liability'), ('professional_indemnity', 'Professional Indemnity')], max_length=50)),
                ('document', models.ImageField(blank=True, null=True, upload_to='insurance_documents/')),
                ('provider_name', models.CharField(blank=True, max_length=255, null=True)),
                ('coverage_start_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_verifications', to='users.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_role', models.CharField(max_length=255)),
                ('hierarchy', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('work_email', models.EmailField(max_length=254)),
                ('employment_type', models.CharField(choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time'), ('Contract', 'Contract')], max_length=50)),
                ('employment_start_date', models.DateField(default=users.models.today)),
                ('employment_end_date', models.DateField(blank=True, null=True)),
                ('probation_end_date', models.DateField(blank=True, null=True)),
                ('line_manager', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, max_length=100, null=True)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('working_days', models.CharField(blank=True, max_length=100, null=True)),
                ('maximum_working_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employment_details', to='users.userprofile')),
            ],
            options={
                'verbose_name': 'Employment Detail',
                'verbose_name_plural': 'Employment Details',
            },
        ),
        migrations.CreateModel(
            name='EducationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=255)),
                ('highest_qualification', models.CharField(max_length=255)),
                ('course_of_study', models.CharField(max_length=255)),
                ('start_year', models.PositiveIntegerField()),
                ('end_year', models.PositiveIntegerField()),
                ('certificate', models.ImageField(blank=True, null=True, upload_to='Educational-certificates/')),
                ('skills', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_details', to='users.userprofile')),
            ],
            options={
                'verbose_name': 'Education Detail',
                'verbose_name_plural': 'Education Details',
            },
        ),
        migrations.CreateModel(
            name='DrivingRiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_date', models.DateField(blank=True, null=True)),
                ('fuel_card_usage_compliance', models.BooleanField(default=False)),
                ('road_traffic_compliance', models.BooleanField(default=False)),
                ('tracker_usage_compliance', models.BooleanField(default=False)),
                ('maintenance_schedule_compliance', models.BooleanField(default=False)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('supporting_document', models.ImageField(blank=True, null=True, upload_to='driving_risk_docs/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driving_risk_assessments', to='users.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField()),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('date', models.DateField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(blank=True, max_length=15, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Non-Binary', 'Non-Binary'), ('Prefer not to say', 'Prefer not to say')], max_length=20, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=20, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed'), ('Other', 'Other')], max_length=20, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='client_photos/')),
                ('next_of_kin_name', models.CharField(blank=True, max_length=255, null=True)),
                ('next_of_kin_relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin_address', models.CharField(blank=True, max_length=255, null=True)),
                ('next_of_kin_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('next_of_kin_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('care_plan', models.CharField(blank=True, max_length=100, null=True)),
                ('care_tasks', models.TextField(blank=True, null=True)),
                ('care_type', models.CharField(blank=True, max_length=100, null=True)),
                ('special_needs', models.TextField(blank=True, null=True)),
                ('preferred_carer_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('No Preference', 'No Preference')], max_length=20, null=True)),
                ('language_preference', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_care_times', models.JSONField(blank=True, default=dict)),
                ('frequency_of_care', models.CharField(blank=True, choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Weekend', 'Weekend'), ('Other', 'Other')], max_length=50, null=True)),
                ('flexibility', models.BooleanField(default=True)),
                ('funding_type', models.CharField(blank=True, choices=[('Private', 'Private'), ('Government', 'Government'), ('Insurance', 'Insurance'), ('Other', 'Other')], max_length=50, null=True)),
                ('care_package_start_date', models.DateField(blank=True, null=True)),
                ('care_package_review_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=20)),
                ('compliance', models.CharField(blank=True, default='Passed', max_length=50, null=True)),
                ('last_visit', models.DateField(blank=True, null=True)),
                ('preferred_carers', models.ManyToManyField(blank=True, limit_choices_to={'role': 'carer'}, related_name='preferred_for_clients', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client Profile',
                'verbose_name_plural': 'Client Profiles',
                'indexes': [models.Index(fields=['client_id'], name='users_clien_client__bd3e61_idx'), models.Index(fields=['user'], name='users_clien_user_id_3161ed_idx')],
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateField()),
                ('used', models.BooleanField(default=False)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Password Reset Token',
                'verbose_name_plural': 'Password Reset Tokens',
                'unique_together': {('user', 'tenant', 'token')},
            },
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['employee_id'], name='users_userp_employe_d67ad6_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['user'], name='users_userp_user_id_d181df_idx'),
        ),
    ]
