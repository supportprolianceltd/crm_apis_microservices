# auth-service/docker-compose.yml

services:
  db:
    image: postgres:15
    container_name: auth_postgres
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - auth_service_default

  auth:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8000:8000"
    environment:
      AUTH_DB_URL: postgres://postgres:password@db:5432/auth_db
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: "True"
      ALLOWED_HOSTS: localhost,127.0.0.1,auth-service,0.0.0.0,*
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CORS_ALLOWED_ORIGINS: http://localhost:5173,https://crm-frontend-react.vercel.app
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - auth_service_default

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - auth_service_default

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - auth_service_default

volumes:
  postgres_data:

networks:
  auth_service_default:
    external: true






