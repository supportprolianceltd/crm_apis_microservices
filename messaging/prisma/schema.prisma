// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        Int       @id @default(autoincrement())
  name      String
  schema    String    @unique
  users     User[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  username      String?
  firstName     String?
  lastName      String?
  role          String?
  tenantId      Int
  tenant        Tenant         @relation(fields: [tenantId], references: [id])
  chats         UsersOnChats[]
  messages      Message[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Chat {
  id        String         @id @default(cuid())
  name      String?
  users     UsersOnChats[]
  messages  Message[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model UsersOnChats {
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  assignedAt DateTime @default(now())

  @@id([userId, chatId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id])
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
