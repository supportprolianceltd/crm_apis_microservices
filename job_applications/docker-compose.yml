services:
  job-applications:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job-applications
    ports:
      - "8003:8003"
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: "True"
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: job_app_db
      DB_USER: postgres
      DB_PASSWORD: password
      DB_HOST: job_app_postgres
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: job_applications.settings
      PYTHONPATH: /app
      ALLOWED_HOSTS: localhost,127.0.0.1,*
      AUTH_SERVICE_URL: http://auth-service:8001
      TALENT_ENGINE_URL: http://talent-engine:8002
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CORS_ALLOWED_ORIGINS: http://localhost:5173,https://crm-frontend-react.vercel.app,http://localhost:8000
      CELERY_BROKER_URL: redis://job_app_redis:6379/0
      CELERY_RESULT_BACKEND: redis://job_app_redis:6379/0
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             gunicorn job_applications.wsgi:application --bind 0.0.0.0:8003"
    depends_on:
      job_app_postgres:
        condition: service_healthy
      job_app_redis:
        condition: service_started
    networks:
      - auth_service_default

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job-applications-celery
    command: celery -A job_applications worker --loglevel=info
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_SETTINGS_MODULE: job_applications.settings
      CELERY_BROKER_URL: redis://job_app_redis:6379/0
      CELERY_RESULT_BACKEND: redis://job_app_redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - job-applications
      - job_app_postgres
      - job_app_redis
    networks:
      - auth_service_default

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job-applications-celery-beat
    command: celery -A job_applications beat --loglevel=info
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_SETTINGS_MODULE: job_applications.settings
      CELERY_BROKER_URL: redis://job_app_redis:6379/0
      CELERY_RESULT_BACKEND: redis://job_app_redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - job-applications
      - job_app_postgres
      - job_app_redis
    networks:
      - auth_service_default

  job_app_redis:
    image: redis:7
    container_name: job_app_redis
    ports:
      - "6381:6379"  # Expose on 6381 to avoid conflict
    networks:
      - auth_service_default

  job_app_postgres:
    image: postgres:15
    container_name: job_app_postgres
    environment:
      POSTGRES_DB: job_app_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - job_app_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - auth_service_default

networks:
  auth_service_default:
    external: true

volumes:
  job_app_pgdata:

