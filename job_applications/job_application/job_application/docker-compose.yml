version: '3.8'

services:
  job_applications:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job_applications
    ports:
      - "8002:8002"
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: "True"
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: job_app_db
      DB_USER: postgres
      DB_PASSWORD: password
      DB_HOST: job_app_postgres
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: job_application.settings
      PYTHONPATH: /app
      ALLOWED_HOSTS: localhost,127.0.0.1,*
      AUTH_SERVICE_URL: http://auth-service:8000
      TALENT_ENGINE_URL: http://talent_engine:8001
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CORS_ALLOWED_ORIGINS: http://localhost:5173,https://crm-frontend-react.vercel.app,http://localhost:8000
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    depends_on:
      job_app_postgres:
        condition: service_healthy
    networks:
      - auth_service_default

  job_app_postgres:
    image: postgres:15
    container_name: job_app_postgres
    environment:
      POSTGRES_DB: job_app_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - job_app_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - auth_service_default

networks:
  auth_service_default:
    external: true

volumes:
  job_app_pgdata: