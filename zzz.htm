<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ProgrammingError
          at /api/login/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>ProgrammingError
       at /api/login/</h1>
  <pre class="exception_value">relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^
</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>http://localhost:8000/api/login/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.2.5</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>ProgrammingError</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^
</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py</span>, line 105, in _execute</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>auth_service.views.LoginWith2FAView</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/usr/local/bin/python3.11</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.11.13</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/app&#x27;,
 &#x27;/usr/local/bin&#x27;,
 &#x27;/usr/local/lib/python311.zip&#x27;,
 &#x27;/usr/local/lib/python3.11&#x27;,
 &#x27;/usr/local/lib/python3.11/lib-dynload&#x27;,
 &#x27;/usr/local/lib/python3.11/site-packages&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Thu, 28 Aug 2025 17:13:42 +0000</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" role="button" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py</code>, line 105, in _execute
          

          
            <div class="context" id="c123269984435776">
              
                <ol start="98" class="pre-context" id="pre123269984435776">
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="105" class="context-line">
                <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>                return self.cursor.execute(sql, params)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='106' class="post-context" id="post123269984435776">
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        # ever set during testing).</pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984435776">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;support@prolianceltd.com&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;users_customuser&quot;.&quot;id&quot;, &quot;users_customuser&quot;.&quot;password&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;last_login&quot;, &quot;users_customuser&quot;.&quot;is_superuser&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;is_staff&quot;, &quot;users_customuser&quot;.&quot;is_active&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;date_joined&quot;, &quot;users_customuser&quot;.&quot;last_password_reset&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;username&quot;, &quot;users_customuser&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;first_name&quot;, &quot;users_customuser&quot;.&quot;last_name&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;role&quot;, &quot;users_customuser&quot;.&quot;permission_levels&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;job_role&quot;, &quot;users_customuser&quot;.&quot;tenant_id&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;branch_id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &#x27;
 &#x27;&quot;users_customuser&quot; WHERE &quot;users_customuser&quot;.&quot;email&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
          <li class="cause"><h3>
          
            The above exception (relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^
) was the direct cause of the following exception:
          
        </h3></li>
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c123269984420480">
              
                <ol start="48" class="pre-context" id="pre123269984420480">
                
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post123269984420480">
                  
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre123269984420480', 'post123269984420480')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984420480">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ProgrammingError(&#x27;relation &quot;users_customuser&quot; does not exist\nLINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...\n                                                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x701d0afd7d90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c123269984435840">
              
                <ol start="190" class="pre-context" id="pre123269984435840">
                
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post123269984435840">
                  
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984435840', 'post123269984435840')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984435840">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x701d07af0860&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x701d0afd7d90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x701d07af0860&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c123269984420800">
              
                <ol start="58" class="pre-context" id="pre123269984420800">
                
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post123269984420800">
                  
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984420800', 'post123269984420800')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984420800">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x701d07acbb00&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/generic/base.py</code>, line 105, in view
          

          
            <div class="context" id="c123269983408064">
              
                <ol start="98" class="pre-context" id="pre123269983408064">
                
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="105" class="context-line">
                <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='106' class="post-context" id="post123269983408064">
                  
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre123269983408064', 'post123269983408064')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269983408064">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;auth_service.views.LoginWith2FAView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;auth_service.views.LoginWith2FAView object at 0x701d07929f10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 515, in dispatch
          

          
            <div class="context" id="c123269984425472">
              
                <ol start="508" class="pre-context" id="pre123269984425472">
                
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="515" class="context-line">
                <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='516' class="post-context" id="post123269984425472">
                  
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre123269984425472', 'post123269984425472')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984425472">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method LoginWith2FAView.post of &lt;auth_service.views.LoginWith2FAView object at 0x701d07929f10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;auth_service.views.LoginWith2FAView object at 0x701d07929f10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 475, in handle_exception
          

          
            <div class="context" id="c123269984424064">
              
                <ol start="468" class="pre-context" id="pre123269984424064">
                
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="475" class="context-line">
                <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='476' class="post-context" id="post123269984424064">
                  
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre123269984424064', 'post123269984424064')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984424064">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;,
 &#x27;view&#x27;: &lt;auth_service.views.LoginWith2FAView object at 0x701d07929f10&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ProgrammingError(&#x27;relation &quot;users_customuser&quot; does not exist\nLINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...\n                                                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x701d09b41080&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;auth_service.views.LoginWith2FAView object at 0x701d07929f10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 486, in raise_uncaught_exception
          

          
            <div class="context" id="c123269983664000">
              
                <ol start="479" class="pre-context" id="pre123269983664000">
                
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="486" class="context-line">
                <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='487' class="post-context" id="post123269983664000">
                  
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre123269983664000', 'post123269983664000')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269983664000">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ProgrammingError(&#x27;relation &quot;users_customuser&quot; does not exist\nLINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...\n                                                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;auth_service.views.LoginWith2FAView object at 0x701d07929f10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 512, in dispatch
          

          
            <div class="context" id="c123269983410496">
              
                <ol start="505" class="pre-context" id="pre123269983410496">
                
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre></pre></li>
                
                </ol>
              
              <ol start="512" class="context-line">
                <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='513' class="post-context" id="post123269983410496">
                  
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre123269983410496', 'post123269983410496')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269983410496">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method LoginWith2FAView.post of &lt;auth_service.views.LoginWith2FAView object at 0x701d07929f10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;auth_service.views.LoginWith2FAView object at 0x701d07929f10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/auth_service/views.py</code>, line 170, in post
          

          
            <div class="context" id="c123269984436096">
              
                <ol start="163" class="pre-context" id="pre123269984436096">
                
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>        # Use tenant context for authentication, just like in CustomTokenObtainPairView</pre></li>
                
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>        with tenant_context(tenant):</pre></li>
                
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>            # Use the same serializer as the token endpoint</pre></li>
                
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>            serializer = self.get_serializer(data=request.data, context={&#x27;request&#x27;: request})</pre></li>
                
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>            </pre></li>
                
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>                # Validate credentials just like the token endpoint</pre></li>
                
                </ol>
              
              <ol start="170" class="context-line">
                <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>                serializer.is_valid(raise_exception=True)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='171' class="post-context" id="post123269984436096">
                  
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>            except serializers.ValidationError as e:</pre></li>
                  
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>                # Return the same error response as the token endpoint</pre></li>
                  
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>                return Response(e.detail, status=status.HTTP_401_UNAUTHORIZED)</pre></li>
                  
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>            </pre></li>
                  
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>            # If we get here, authentication was successful</pre></li>
                  
                  <li onclick="toggle('pre123269984436096', 'post123269984436096')"><pre>            user = serializer.user</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984436096">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;auth_service.views.LoginWith2FAView object at 0x701d07929f10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>CustomTokenSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;}, data={&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}):
    email = CharField(write_only=True)
    password = PasswordField()</pre></td>
                  </tr>
                
                  <tr>
                    <td>tenant</td>
                    <td class="code"><pre>&lt;Tenant: public&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py</code>, line 225, in is_valid
          

          
            <div class="context" id="c123269984423040">
              
                <ol start="218" class="pre-context" id="pre123269984423040">
                
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>        assert hasattr(self, &#x27;initial_data&#x27;), (</pre></li>
                
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>            &#x27;Cannot call `.is_valid()` as no `data=` keyword argument was &#x27;</pre></li>
                
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>            &#x27;passed when instantiating the serializer instance.&#x27;</pre></li>
                
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>        if not hasattr(self, &#x27;_validated_data&#x27;):</pre></li>
                
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="225" class="context-line">
                <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>                self._validated_data = self.run_validation(self.initial_data)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='226' class="post-context" id="post123269984423040">
                  
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>            except ValidationError as exc:</pre></li>
                  
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>                self._validated_data = {}</pre></li>
                  
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>                self._errors = exc.detail</pre></li>
                  
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre>                self._errors = {}</pre></li>
                  
                  <li onclick="toggle('pre123269984423040', 'post123269984423040')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984423040">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>raise_exception</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>CustomTokenSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;}, data={&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}):
    email = CharField(write_only=True)
    password = PasswordField()</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py</code>, line 447, in run_validation
          

          
            <div class="context" id="c123269984806144">
              
                <ol start="440" class="pre-context" id="pre123269984806144">
                
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>        (is_empty_value, data) = self.validate_empty_values(data)</pre></li>
                
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>        if is_empty_value:</pre></li>
                
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>            return data</pre></li>
                
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>        value = self.to_internal_value(data)</pre></li>
                
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>            self.run_validators(value)</pre></li>
                
                </ol>
              
              <ol start="447" class="context-line">
                <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>            value = self.validate(value)
                         ^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='448' class="post-context" id="post123269984806144">
                  
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>            assert value is not None, &#x27;.validate() should return the validated data&#x27;</pre></li>
                  
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>        except (ValidationError, DjangoValidationError) as exc:</pre></li>
                  
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>            raise ValidationError(detail=as_serializer_error(exc))</pre></li>
                  
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre123269984806144', 'post123269984806144')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984806144">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_empty_value</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>CustomTokenSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;}, data={&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}):
    email = CharField(write_only=True)
    password = PasswordField()</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/auth_service/views.py</code>, line 71, in validate
          

          
            <div class="context" id="c123269984805888">
              
                <ol start="64" class="pre-context" id="pre123269984805888">
                
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        token = super().get_token(user)</pre></li>
                
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        token[&#x27;tenant_id&#x27;] = user.tenant.id</pre></li>
                
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        token[&#x27;tenant_schema&#x27;] = user.tenant.schema_name</pre></li>
                
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        token[&#x27;has_accepted_terms&#x27;] = user.has_accepted_terms  # Add to token</pre></li>
                
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        return token</pre></li>
                
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>    def validate(self, attrs):</pre></li>
                
                </ol>
              
              <ol start="71" class="context-line">
                <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        data = super().validate(attrs)
                   ^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='72' class="post-context" id="post123269984805888">
                  
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        user = self.user</pre></li>
                  
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        # Check if token was issued before last password reset</pre></li>
                  
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        refresh = RefreshToken(data[&#x27;refresh&#x27;])</pre></li>
                  
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        decoded_token = jwt.decode(data[&#x27;access&#x27;], settings.SECRET_KEY, algorithms=[&quot;HS256&quot;])</pre></li>
                  
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        token_iat = decoded_token.get(&#x27;iat&#x27;)</pre></li>
                  
                  <li onclick="toggle('pre123269984805888', 'post123269984805888')"><pre>        if user.last_password_reset and token_iat &lt; user.last_password_reset.timestamp():</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984805888">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;auth_service.views.CustomTokenSerializer&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>attrs</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>CustomTokenSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;}, data={&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}):
    email = CharField(write_only=True)
    password = PasswordField()</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework_simplejwt/serializers.py</code>, line 73, in validate
          

          
            <div class="context" id="c123269984805568">
              
                <ol start="66" class="pre-context" id="pre123269984805568">
                
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre>        return cls.token_class.for_user(user)  # type: ignore</pre></li>
                
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre>class TokenObtainPairSerializer(TokenObtainSerializer):</pre></li>
                
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre>    token_class = RefreshToken</pre></li>
                
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre>    def validate(self, attrs: dict[str, Any]) -&gt; dict[str, str]:</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre>        data = super().validate(attrs)
                   ^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='74' class="post-context" id="post123269984805568">
                  
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre>        refresh = self.get_token(self.user)</pre></li>
                  
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre>        data[&quot;refresh&quot;] = str(refresh)</pre></li>
                  
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre>        data[&quot;access&quot;] = str(refresh.access_token)</pre></li>
                  
                  <li onclick="toggle('pre123269984805568', 'post123269984805568')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984805568">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;rest_framework_simplejwt.serializers.TokenObtainPairSerializer&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>attrs</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>CustomTokenSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;}, data={&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}):
    email = CharField(write_only=True)
    password = PasswordField()</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework_simplejwt/serializers.py</code>, line 54, in validate
          

          
            <div class="context" id="c123269984811904">
              
                <ol start="47" class="pre-context" id="pre123269984811904">
                
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>            &quot;password&quot;: attrs[&quot;password&quot;],</pre></li>
                
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>            authenticate_kwargs[&quot;request&quot;] = self.context[&quot;request&quot;]</pre></li>
                
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>        except KeyError:</pre></li>
                
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>            pass</pre></li>
                
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre></pre></li>
                
                </ol>
              
              <ol start="54" class="context-line">
                <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>        self.user = authenticate(**authenticate_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='55' class="post-context" id="post123269984811904">
                  
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>        if not api_settings.USER_AUTHENTICATION_RULE(self.user):</pre></li>
                  
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>            raise exceptions.AuthenticationFailed(</pre></li>
                  
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>                self.error_messages[&quot;no_active_account&quot;],</pre></li>
                  
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>                &quot;no_active_account&quot;,</pre></li>
                  
                  <li onclick="toggle('pre123269984811904', 'post123269984811904')"><pre>            )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984811904">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>attrs</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>authenticate_kwargs</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;,
 &#x27;password&#x27;: &#x27;qwerty&#x27;,
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>CustomTokenSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;}, data={&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}):
    email = CharField(write_only=True)
    password = PasswordField()</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/decorators/debug.py</code>, line 75, in sensitive_variables_wrapper
          

          
            <div class="context" id="c123269984806592">
              
                <ol start="68" class="pre-context" id="pre123269984806592">
                
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre>            @wraps(func)</pre></li>
                
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre>            def sensitive_variables_wrapper(*func_args, **func_kwargs):</pre></li>
                
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre>                if variables:</pre></li>
                
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre>                    sensitive_variables_wrapper.sensitive_variables = variables</pre></li>
                
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre>                else:</pre></li>
                
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre>                    sensitive_variables_wrapper.sensitive_variables = &quot;__ALL__&quot;</pre></li>
                
                </ol>
              
              <ol start="75" class="context-line">
                <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre>                return func(*func_args, **func_kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='76' class="post-context" id="post123269984806592">
                  
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre>        return sensitive_variables_wrapper</pre></li>
                  
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre>    return decorator</pre></li>
                  
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984806592', 'post123269984806592')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984806592">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>func</td>
                    <td class="code"><pre>&lt;function authenticate at 0x701d0c0bc040&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>func_args</td>
                    <td class="code"><pre>&#x27;********************&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>func_kwargs</td>
                    <td class="code"><pre>&#x27;********************&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sensitive_variables_wrapper</td>
                    <td class="code"><pre>&lt;function authenticate at 0x701d0c0bc0e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>variables</td>
                    <td class="code"><pre>(&#x27;credentials&#x27;,)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/contrib/auth/__init__.py</code>, line 114, in authenticate
          

          
            <div class="context" id="c123269984800960">
              
                <ol start="107" class="pre-context" id="pre123269984800960">
                
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>@sensitive_variables(&quot;credentials&quot;)</pre></li>
                
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>def authenticate(request=None, **credentials):</pre></li>
                
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>    If the given credentials are valid, return a User object.</pre></li>
                
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>    for backend, backend_path in _get_compatible_backends(request, **credentials):</pre></li>
                
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="114" class="context-line">
                <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>            user = backend.authenticate(request, **credentials)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='115' class="post-context" id="post123269984800960">
                  
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>        except PermissionDenied:</pre></li>
                  
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>            # This backend says to stop in our tracks - this user should not be</pre></li>
                  
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>            # allowed in at all.</pre></li>
                  
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>            break</pre></li>
                  
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>        if user is None:</pre></li>
                  
                  <li onclick="toggle('pre123269984800960', 'post123269984800960')"><pre>            continue</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984800960">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>backend</td>
                    <td class="code"><pre>&lt;django.contrib.auth.backends.ModelBackend object at 0x701d07a7e9d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>backend_path</td>
                    <td class="code"><pre>&#x27;django.contrib.auth.backends.ModelBackend&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>credentials</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;, &#x27;password&#x27;: &#x27;qwerty&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/contrib/auth/backends.py</code>, line 65, in authenticate
          

          
            <div class="context" id="c123269984434688">
              
                <ol start="58" class="pre-context" id="pre123269984434688">
                
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>    def authenticate(self, request, username=None, password=None, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>        if username is None:</pre></li>
                
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>            username = kwargs.get(UserModel.USERNAME_FIELD)</pre></li>
                
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>        if username is None or password is None:</pre></li>
                
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>            return</pre></li>
                
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>            user = UserModel._default_manager.get_by_natural_key(username)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post123269984434688">
                  
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>        except UserModel.DoesNotExist:</pre></li>
                  
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>            # Run the default password hasher once to reduce the timing</pre></li>
                  
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>            # difference between an existing and a nonexistent user (#20760).</pre></li>
                  
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>            UserModel().set_password(password)</pre></li>
                  
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre123269984434688', 'post123269984434688')"><pre>            if user.check_password(password) and self.user_can_authenticate(user):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984434688">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>password</td>
                    <td class="code"><pre>&#x27;qwerty&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/login/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.backends.ModelBackend object at 0x701d07a7e9d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>username</td>
                    <td class="code"><pre>&#x27;support@prolianceltd.com&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/contrib/auth/base_user.py</code>, line 37, in get_by_natural_key
          

          
            <div class="context" id="c123269984805056">
              
                <ol start="30" class="pre-context" id="pre123269984805056">
                
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>        except ValueError:</pre></li>
                
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>            pass</pre></li>
                
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>            email = email_name + &quot;@&quot; + domain_part.lower()</pre></li>
                
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>        return email</pre></li>
                
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>    def get_by_natural_key(self, username):</pre></li>
                
                </ol>
              
              <ol start="37" class="context-line">
                <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>        return self.get(**{self.model.USERNAME_FIELD: username})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='38' class="post-context" id="post123269984805056">
                  
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>    async def aget_by_natural_key(self, username):</pre></li>
                  
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>        return await self.aget(**{self.model.USERNAME_FIELD: username})</pre></li>
                  
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984805056', 'post123269984805056')"><pre>class AbstractBaseUser(models.Model):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984805056">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;users.models.CustomUserManager object at 0x701d0bf9f010&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>username</td>
                    <td class="code"><pre>&#x27;support@prolianceltd.com&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c123269984801152">
              
                <ol start="80" class="pre-context" id="pre123269984801152">
                
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post123269984801152">
                  
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre123269984801152', 'post123269984801152')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984801152">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;get&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;users.models.CustomUserManager object at 0x701d0bf9f010&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/models/query.py</code>, line 629, in get
          

          
            <div class="context" id="c123269984434432">
              
                <ol start="622" class="pre-context" id="pre123269984434432">
                
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>        limit = None</pre></li>
                
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>        if (</pre></li>
                
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>            not clone.query.select_for_update</pre></li>
                
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>            or connections[clone.db].features.supports_select_for_update_with_limit</pre></li>
                
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>        ):</pre></li>
                
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>            limit = MAX_GET_RESULTS</pre></li>
                
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>            clone.query.set_limits(high=limit)</pre></li>
                
                </ol>
              
              <ol start="629" class="context-line">
                <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>        num = len(clone)
                   ^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='630' class="post-context" id="post123269984434432">
                  
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>        if num == 1:</pre></li>
                  
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>            return clone._result_cache[0]</pre></li>
                  
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>        if not num:</pre></li>
                  
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>            raise self.model.DoesNotExist(</pre></li>
                  
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>                &quot;%s matching query does not exist.&quot; % self.model._meta.object_name</pre></li>
                  
                  <li onclick="toggle('pre123269984434432', 'post123269984434432')"><pre>            )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984434432">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>clone</td>
                    <td class="code"><pre>Error in formatting: ProgrammingError: relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^
</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;support@prolianceltd.com&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>limit</td>
                    <td class="code"><pre>21</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ProgrammingError: relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^
</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/models/query.py</code>, line 366, in __len__
          

          
            <div class="context" id="c123269983870272">
              
                <ol start="359" class="pre-context" id="pre123269983870272">
                
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>    def __repr__(self):</pre></li>
                
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>        data = list(self[: REPR_OUTPUT_SIZE + 1])</pre></li>
                
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>        if len(data) &gt; REPR_OUTPUT_SIZE:</pre></li>
                
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>            data[-1] = &quot;...(remaining elements truncated)...&quot;</pre></li>
                
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>        return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, data)</pre></li>
                
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>    def __len__(self):</pre></li>
                
                </ol>
              
              <ol start="366" class="context-line">
                <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>        self._fetch_all()
             ^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='367' class="post-context" id="post123269983870272">
                  
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>        return len(self._result_cache)</pre></li>
                  
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>    def __iter__(self):</pre></li>
                  
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>        The queryset iterator protocol uses three nested iterators in the</pre></li>
                  
                  <li onclick="toggle('pre123269983870272', 'post123269983870272')"><pre>        default case:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269983870272">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ProgrammingError: relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^
</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/models/query.py</code>, line 1949, in _fetch_all
          

          
            <div class="context" id="c123269984801536">
              
                <ol start="1942" class="pre-context" id="pre123269984801536">
                
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>        c._known_related_objects = self._known_related_objects</pre></li>
                
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>        c._iterable_class = self._iterable_class</pre></li>
                
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>        c._fields = self._fields</pre></li>
                
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>        return c</pre></li>
                
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>    def _fetch_all(self):</pre></li>
                
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>        if self._result_cache is None:</pre></li>
                
                </ol>
              
              <ol start="1949" class="context-line">
                <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>            self._result_cache = list(self._iterable_class(self))
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1950' class="post-context" id="post123269984801536">
                  
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>        if self._prefetch_related_lookups and not self._prefetch_done:</pre></li>
                  
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>            self._prefetch_related_objects()</pre></li>
                  
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>    def _next_is_sticky(self):</pre></li>
                  
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre123269984801536', 'post123269984801536')"><pre>        Indicate that the next filter call and the one following that should</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984801536">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ProgrammingError: relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^
</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/models/query.py</code>, line 91, in __iter__
          

          
            <div class="context" id="c123269983870528">
              
                <ol start="84" class="pre-context" id="pre123269983870528">
                
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>    def __iter__(self):</pre></li>
                
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>        queryset = self.queryset</pre></li>
                
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>        db = queryset.db</pre></li>
                
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>        compiler = queryset.query.get_compiler(using=db)</pre></li>
                
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>        # Execute the query. This will also fill compiler.select, klass_info,</pre></li>
                
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>        # and annotations.</pre></li>
                
                </ol>
              
              <ol start="91" class="context-line">
                <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>        results = compiler.execute_sql(
                      </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='92' class="post-context" id="post123269983870528">
                  
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>            chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size</pre></li>
                  
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>        select, klass_info, annotation_col_map = (</pre></li>
                  
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>            compiler.select,</pre></li>
                  
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>            compiler.klass_info,</pre></li>
                  
                  <li onclick="toggle('pre123269983870528', 'post123269983870528')"><pre>            compiler.annotation_col_map,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269983870528">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>compiler</td>
                    <td class="code"><pre>&lt;SQLCompiler model=CustomUser connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>db</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>queryset</td>
                    <td class="code"><pre>Error in formatting: ProgrammingError: relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^
</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.query.ModelIterable object at 0x701d07a7da50&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py</code>, line 1623, in execute_sql
          

          
            <div class="context" id="c123269985378816">
              
                <ol start="1616" class="pre-context" id="pre123269985378816">
                
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>                return</pre></li>
                
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>        if chunked_fetch:</pre></li>
                
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>            cursor = self.connection.chunked_cursor()</pre></li>
                
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>            cursor = self.connection.cursor()</pre></li>
                
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="1623" class="context-line">
                <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>            cursor.execute(sql, params)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1624' class="post-context" id="post123269985378816">
                  
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>        except Exception:</pre></li>
                  
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>            # Might fail for server-side cursors (e.g. connection closed)</pre></li>
                  
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>            cursor.close()</pre></li>
                  
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>            raise</pre></li>
                  
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269985378816', 'post123269985378816')"><pre>        if result_type == ROW_COUNT:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269985378816">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunk_size</td>
                    <td class="code"><pre>100</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked_fetch</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;support@prolianceltd.com&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>result_type</td>
                    <td class="code"><pre>&#x27;multi&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLCompiler model=CustomUser connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;users_customuser&quot;.&quot;id&quot;, &quot;users_customuser&quot;.&quot;password&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;last_login&quot;, &quot;users_customuser&quot;.&quot;is_superuser&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;is_staff&quot;, &quot;users_customuser&quot;.&quot;is_active&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;date_joined&quot;, &quot;users_customuser&quot;.&quot;last_password_reset&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;username&quot;, &quot;users_customuser&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;first_name&quot;, &quot;users_customuser&quot;.&quot;last_name&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;role&quot;, &quot;users_customuser&quot;.&quot;permission_levels&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;job_role&quot;, &quot;users_customuser&quot;.&quot;tenant_id&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;branch_id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &#x27;
 &#x27;&quot;users_customuser&quot; WHERE &quot;users_customuser&quot;.&quot;email&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py</code>, line 122, in execute
          

          
            <div class="context" id="c123269984425344">
              
                <ol start="115" class="pre-context" id="pre123269984425344">
                
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre>class CursorDebugWrapper(CursorWrapper):</pre></li>
                
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre>    # XXX callproc isn&#x27;t instrumented at this time.</pre></li>
                
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre>        with self.debug_sql(sql, params, use_last_executed_query=True):</pre></li>
                
                </ol>
              
              <ol start="122" class="context-line">
                <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre>            return super().execute(sql, params)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='123' class="post-context" id="post123269984425344">
                  
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre>        with self.debug_sql(sql, param_list, many=True):</pre></li>
                  
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre>            return super().executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984425344', 'post123269984425344')"><pre>    @contextmanager</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984425344">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.backends.utils.CursorDebugWrapper&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;support@prolianceltd.com&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;users_customuser&quot;.&quot;id&quot;, &quot;users_customuser&quot;.&quot;password&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;last_login&quot;, &quot;users_customuser&quot;.&quot;is_superuser&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;is_staff&quot;, &quot;users_customuser&quot;.&quot;is_active&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;date_joined&quot;, &quot;users_customuser&quot;.&quot;last_password_reset&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;username&quot;, &quot;users_customuser&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;first_name&quot;, &quot;users_customuser&quot;.&quot;last_name&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;role&quot;, &quot;users_customuser&quot;.&quot;permission_levels&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;job_role&quot;, &quot;users_customuser&quot;.&quot;tenant_id&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;branch_id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &#x27;
 &#x27;&quot;users_customuser&quot; WHERE &quot;users_customuser&quot;.&quot;email&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py</code>, line 79, in execute
          

          
            <div class="context" id="c123269984435584">
              
                <ol start="72" class="pre-context" id="pre123269984435584">
                
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>            elif kparams is None:</pre></li>
                
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>                return self.cursor.callproc(procname, params)</pre></li>
                
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>                params = params or ()</pre></li>
                
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>                return self.cursor.callproc(procname, params, kparams)</pre></li>
                
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                </ol>
              
              <ol start="79" class="context-line">
                <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>        return self._execute_with_wrappers(
                   </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='80' class="post-context" id="post123269984435584">
                  
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>            sql, params, many=False, executor=self._execute</pre></li>
                  
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>        return self._execute_with_wrappers(</pre></li>
                  
                  <li onclick="toggle('pre123269984435584', 'post123269984435584')"><pre>            sql, param_list, many=True, executor=self._executemany</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984435584">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;support@prolianceltd.com&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;users_customuser&quot;.&quot;id&quot;, &quot;users_customuser&quot;.&quot;password&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;last_login&quot;, &quot;users_customuser&quot;.&quot;is_superuser&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;is_staff&quot;, &quot;users_customuser&quot;.&quot;is_active&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;date_joined&quot;, &quot;users_customuser&quot;.&quot;last_password_reset&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;username&quot;, &quot;users_customuser&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;first_name&quot;, &quot;users_customuser&quot;.&quot;last_name&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;role&quot;, &quot;users_customuser&quot;.&quot;permission_levels&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;job_role&quot;, &quot;users_customuser&quot;.&quot;tenant_id&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;branch_id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &#x27;
 &#x27;&quot;users_customuser&quot; WHERE &quot;users_customuser&quot;.&quot;email&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py</code>, line 92, in _execute_with_wrappers
          

          
            <div class="context" id="c123269984435904">
              
                <ol start="85" class="pre-context" id="pre123269984435904">
                
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>            sql, param_list, many=True, executor=self._executemany</pre></li>
                
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>    def _execute_with_wrappers(self, sql, params, many, executor):</pre></li>
                
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>        context = {&quot;connection&quot;: self.db, &quot;cursor&quot;: self}</pre></li>
                
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>        for wrapper in reversed(self.db.execute_wrappers):</pre></li>
                
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>            executor = functools.partial(wrapper, executor)</pre></li>
                
                </ol>
              
              <ol start="92" class="context-line">
                <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>        return executor(sql, params, many, context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='93' class="post-context" id="post123269984435904">
                  
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                  
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>        # ever set during testing).</pre></li>
                  
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                  
                  <li onclick="toggle('pre123269984435904', 'post123269984435904')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984435904">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
 &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>executor</td>
                    <td class="code"><pre>&lt;bound method CursorWrapper._execute of &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>many</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;support@prolianceltd.com&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;users_customuser&quot;.&quot;id&quot;, &quot;users_customuser&quot;.&quot;password&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;last_login&quot;, &quot;users_customuser&quot;.&quot;is_superuser&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;is_staff&quot;, &quot;users_customuser&quot;.&quot;is_active&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;date_joined&quot;, &quot;users_customuser&quot;.&quot;last_password_reset&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;username&quot;, &quot;users_customuser&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;first_name&quot;, &quot;users_customuser&quot;.&quot;last_name&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;role&quot;, &quot;users_customuser&quot;.&quot;permission_levels&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;job_role&quot;, &quot;users_customuser&quot;.&quot;tenant_id&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;branch_id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &#x27;
 &#x27;&quot;users_customuser&quot; WHERE &quot;users_customuser&quot;.&quot;email&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py</code>, line 100, in _execute
          

          
            <div class="context" id="c123269984435712">
              
                <ol start="93" class="pre-context" id="pre123269984435712">
                
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre></pre></li>
                
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>        # ever set during testing).</pre></li>
                
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                </ol>
              
              <ol start="100" class="context-line">
                <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>        with self.db.wrap_database_errors:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='101' class="post-context" id="post123269984435712">
                  
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>            if params is None:</pre></li>
                  
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>                # params default might be backend specific.</pre></li>
                  
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>                return self.cursor.execute(sql)</pre></li>
                  
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre>                return self.cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre123269984435712', 'post123269984435712')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984435712">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;support@prolianceltd.com&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;users_customuser&quot;.&quot;id&quot;, &quot;users_customuser&quot;.&quot;password&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;last_login&quot;, &quot;users_customuser&quot;.&quot;is_superuser&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;is_staff&quot;, &quot;users_customuser&quot;.&quot;is_active&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;date_joined&quot;, &quot;users_customuser&quot;.&quot;last_password_reset&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;username&quot;, &quot;users_customuser&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;first_name&quot;, &quot;users_customuser&quot;.&quot;last_name&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;role&quot;, &quot;users_customuser&quot;.&quot;permission_levels&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;job_role&quot;, &quot;users_customuser&quot;.&quot;tenant_id&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;branch_id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &#x27;
 &#x27;&quot;users_customuser&quot; WHERE &quot;users_customuser&quot;.&quot;email&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/utils.py</code>, line 91, in __exit__
          

          
            <div class="context" id="c123269983663488">
              
                <ol start="84" class="pre-context" id="pre123269983663488">
                
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>            db_exc_type = getattr(self.wrapper.Database, dj_exc_type.__name__)</pre></li>
                
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>            if issubclass(exc_type, db_exc_type):</pre></li>
                
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>                dj_exc_value = dj_exc_type(*exc_value.args)</pre></li>
                
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>                # Only set the &#x27;errors_occurred&#x27; flag for errors that may make</pre></li>
                
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>                # the connection unusable.</pre></li>
                
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>                if dj_exc_type not in (DataError, IntegrityError):</pre></li>
                
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>                    self.wrapper.errors_occurred = True</pre></li>
                
                </ol>
              
              <ol start="91" class="context-line">
                <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>                raise dj_exc_value.with_traceback(traceback) from exc_value
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='92' class="post-context" id="post123269983663488">
                  
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>    def __call__(self, func):</pre></li>
                  
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>        # Note that we are intentionally not using @wraps here for performance</pre></li>
                  
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>        # reasons. Refs #21109.</pre></li>
                  
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>        def inner(*args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre123269983663488', 'post123269983663488')"><pre>            with self:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269983663488">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>db_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;psycopg2.ProgrammingError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.utils.ProgrammingError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_value</td>
                    <td class="code"><pre>ProgrammingError(&#x27;relation &quot;users_customuser&quot; does not exist\nLINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...\n                                                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;psycopg2.errors.UndefinedTable&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_value</td>
                    <td class="code"><pre>UndefinedTable(&#x27;relation &quot;users_customuser&quot; does not exist\nLINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...\n                                                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.utils.DatabaseErrorWrapper object at 0x701d0afd4150&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>traceback</td>
                    <td class="code"><pre>&lt;traceback object at 0x701d07a23e40&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py</code>, line 105, in _execute
          

          
            <div class="context" id="c123269984435776">
              
                <ol start="98" class="pre-context" id="pre123269984435776">
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="105" class="context-line">
                <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>                return self.cursor.execute(sql, params)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='106' class="post-context" id="post123269984435776">
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre></pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        # ever set during testing).</pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                  
                  <li onclick="toggle('pre123269984435776', 'post123269984435776')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v123269984435776">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;support@prolianceltd.com&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x701d07999f90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;users_customuser&quot;.&quot;id&quot;, &quot;users_customuser&quot;.&quot;password&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;last_login&quot;, &quot;users_customuser&quot;.&quot;is_superuser&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;is_staff&quot;, &quot;users_customuser&quot;.&quot;is_active&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;date_joined&quot;, &quot;users_customuser&quot;.&quot;last_password_reset&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;username&quot;, &quot;users_customuser&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;first_name&quot;, &quot;users_customuser&quot;.&quot;last_name&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;role&quot;, &quot;users_customuser&quot;.&quot;permission_levels&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;job_role&quot;, &quot;users_customuser&quot;.&quot;tenant_id&quot;, &#x27;
 &#x27;&quot;users_customuser&quot;.&quot;branch_id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &#x27;
 &#x27;&quot;users_customuser&quot; WHERE &quot;users_customuser&quot;.&quot;email&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ProgrammingError at /api/login/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://localhost:8000/api/login/

Django Version: 5.2.5
Python Version: 3.11.13
Installed Applications:
[&#x27;django_tenants&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;core&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.admin&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework_simplejwt&#x27;,
 &#x27;drf_spectacular&#x27;,
 &#x27;users&#x27;,
 &#x27;django_extensions&#x27;]
Installed Middleware:
[&#x27;auth_service.middleware.CustomTenantMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The above exception (relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^
) was the direct cause of the following exception:
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 105, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 515, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 486, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/auth_service/views.py", line 170, in post
    serializer.is_valid(raise_exception=True)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py", line 225, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py", line 447, in run_validation
    value = self.validate(value)
            ^^^^^^^^^^^^^^^^^^^^
  File "/app/auth_service/views.py", line 71, in validate
    data = super().validate(attrs)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework_simplejwt/serializers.py", line 73, in validate
    data = super().validate(attrs)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework_simplejwt/serializers.py", line 54, in validate
    self.user = authenticate(**authenticate_kwargs)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/debug.py", line 75, in sensitive_variables_wrapper
    return func(*func_args, **func_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/contrib/auth/__init__.py", line 114, in authenticate
    user = backend.authenticate(request, **credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/contrib/auth/backends.py", line 65, in authenticate
    user = UserModel._default_manager.get_by_natural_key(username)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/contrib/auth/base_user.py", line 37, in get_by_natural_key
    return self.get(**{self.model.USERNAME_FIELD: username})
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/query.py", line 629, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/query.py", line 366, in __len__
    self._fetch_all()
    ^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/query.py", line 1949, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/query.py", line 91, in __iter__
    results = compiler.execute_sql(
              
  File "/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py", line 1623, in execute_sql
    cursor.execute(sql, params)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 122, in execute
    return super().execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 79, in execute
    return self._execute_with_wrappers(
           
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Exception Type: ProgrammingError at /api/login/
Exception Value: relation &quot;users_customuser&quot; does not exist
LINE 1: ...id&quot;, &quot;users_customuser&quot;.&quot;has_accepted_terms&quot; FROM &quot;users_cus...
                                                             ^

</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th scope="col">Variable</th>
          <th scope="col">Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>csrftoken</td>
            <td class="code"><pre>&#x27;********************&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>_ga</td>
            <td class="code"><pre>&#x27;GA1.1.1159993055.1753365384&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>_ga_P6GNMXTVEC</td>
            <td class="code"><pre>&#x27;GS2.1.s1753370292$o2$g1$t1753370293$j59$l0$h0&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;65&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE</td>
          <td class="code"><pre>&#x27;EyC7aPPcCR8zjw4p4dZkL4yNirYsYsmb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate, br, zstd&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_LANGUAGE</td>
          <td class="code"><pre>&#x27;en-US,en;q=0.9,es;q=0.8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#x27;keep-alive&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_COOKIE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;localhost:8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ORIGIN</td>
          <td class="code"><pre>&#x27;http://localhost:8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_REFERER</td>
          <td class="code"><pre>&#x27;http://localhost:8000/api/docs/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_CH_UA</td>
          <td class="code"><pre>&#x27;&quot;Not;A=Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;139&quot;, &quot;Chromium&quot;;v=&quot;139&quot;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_CH_UA_MOBILE</td>
          <td class="code"><pre>&#x27;?0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_CH_UA_PLATFORM</td>
          <td class="code"><pre>&#x27;&quot;Windows&quot;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_FETCH_DEST</td>
          <td class="code"><pre>&#x27;empty&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_FETCH_MODE</td>
          <td class="code"><pre>&#x27;cors&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_FETCH_SITE</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>(&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like &#x27;
 &#x27;Gecko) Chrome/139.0.0.0 Safari/537.36&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_CSRFTOKEN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/api/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RAW_URI</td>
          <td class="code"><pre>&#x27;/api/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;172.19.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#x27;34372&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;0.0.0.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;gunicorn/23.0.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>gunicorn.socket</td>
          <td class="code"><pre>&lt;socket.socket fd=10, family=2, type=1, proto=0, laddr=(&#x27;172.19.0.5&#x27;, 8000), raddr=(&#x27;172.19.0.1&#x27;, 34372)&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x701d0794d510&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;gunicorn.http.wsgi.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;gunicorn.http.body.Body object at 0x701d0795a310&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input_terminated</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>auth_service.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;localhost&#x27;, &#x27;127.0.0.1&#x27;, &#x27;auth-service&#x27;, &#x27;0.0.0.0&#x27;, &#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>ASGI_APPLICATION</td>
          <td class="code"><pre>&#x27;auth_service.asgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_SERVICE_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/app&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOWED_ORIGINS</td>
          <td class="code"><pre>[&#x27;http://localhost:5173&#x27;, &#x27;https://crm-frontend-react.vercel.app&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_CREDENTIALS</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_HEADERS</td>
          <td class="code"><pre>[&#x27;accept&#x27;,
 &#x27;authorization&#x27;,
 &#x27;content-type&#x27;,
 &#x27;origin&#x27;,
 &#x27;x-csrftoken&#x27;,
 &#x27;x-requested-with&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_METHODS</td>
          <td class="code"><pre>[&#x27;DELETE&#x27;, &#x27;GET&#x27;, &#x27;OPTIONS&#x27;, &#x27;PATCH&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 60,
             &#x27;ENGINE&#x27;: &#x27;django_tenants.postgresql_backend&#x27;,
             &#x27;HOST&#x27;: &#x27;auth_postgres&#x27;,
             &#x27;NAME&#x27;: &#x27;auth_db&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;SCHEMA&#x27;: &#x27;public&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;postgres&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[&#x27;django_tenants.routers.TenantSyncRouter&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django_tenants&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;core&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.admin&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework_simplejwt&#x27;,
 &#x27;drf_spectacular&#x27;,
 &#x27;users&#x27;,
 &#x27;django_extensions&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>KAFKA_BOOTSTRAP_SERVERS</td>
          <td class="code"><pre>[&#x27;kafka:9092&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>KAFKA_TOPIC_USER_EVENTS</td>
          <td class="code"><pre>&#x27;user-events&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian BokmÃ¥l&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#x27;disable_existing_loggers&#x27;: False,
 &#x27;formatters&#x27;: {&#x27;simple&#x27;: {&#x27;format&#x27;: &#x27;[{levelname}] {message}&#x27;, &#x27;style&#x27;: &#x27;{&#x27;},
                &#x27;verbose&#x27;: {&#x27;format&#x27;: &#x27;{asctime} [{levelname}] {name}: &#x27;
                                      &#x27;{message}&#x27;,
                            &#x27;style&#x27;: &#x27;{&#x27;}},
 &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;,
                          &#x27;formatter&#x27;: &#x27;simple&#x27;},
              &#x27;file&#x27;: {&#x27;backupCount&#x27;: 5,
                       &#x27;class&#x27;: &#x27;logging.handlers.RotatingFileHandler&#x27;,
                       &#x27;filename&#x27;: &#x27;/app/logs/auth_service.log&#x27;,
                       &#x27;formatter&#x27;: &#x27;verbose&#x27;,
                       &#x27;level&#x27;: &#x27;INFO&#x27;,
                       &#x27;maxBytes&#x27;: 5242880}},
 &#x27;loggers&#x27;: {&#x27;core&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;],
                      &#x27;level&#x27;: &#x27;INFO&#x27;,
                      &#x27;propagate&#x27;: False},
             &#x27;django&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;, &#x27;console&#x27;],
                        &#x27;level&#x27;: &#x27;INFO&#x27;,
                        &#x27;propagate&#x27;: True},
             &#x27;users&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;],
                       &#x27;level&#x27;: &#x27;INFO&#x27;,
                       &#x27;propagate&#x27;: False}},
 &#x27;version&#x27;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LOG_DIR</td>
          <td class="code"><pre>&#x27;/app/logs&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;/app/media&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/media/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;auth_service.middleware.CustomTenantMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NOTIFICATIONS_EVENT_URL</td>
          <td class="code"><pre>&#x27;http://app:3000/events/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>PUBLIC_SCHEMA_NAME</td>
          <td class="code"><pre>&#x27;public&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: &#x27;********************&#x27;,
 &#x27;DEFAULT_PARSER_CLASSES&#x27;: [&#x27;rest_framework.parsers.JSONParser&#x27;,
                            &#x27;rest_framework.parsers.FormParser&#x27;,
                            &#x27;rest_framework.parsers.MultiPartParser&#x27;],
 &#x27;DEFAULT_PERMISSION_CLASSES&#x27;: (&#x27;rest_framework.permissions.IsAuthenticated&#x27;,),
 &#x27;DEFAULT_SCHEMA_CLASS&#x27;: &#x27;drf_spectacular.openapi.AutoSchema&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;auth_service.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;auth_service.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHARED_APPS</td>
          <td class="code"><pre>[&#x27;django_tenants&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;core&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SIMPLE_JWT</td>
          <td class="code"><pre>{&#x27;ACCESS_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;AUTH_HEADER_TYPES&#x27;: &#x27;********************&#x27;,
 &#x27;BLACKLIST_AFTER_ROTATION&#x27;: True,
 &#x27;REFRESH_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;SIGNING_KEY&#x27;: &#x27;********************&#x27;,
 &#x27;TOKEN_OBTAIN_SERIALIZER&#x27;: &#x27;********************&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>SOCIALACCOUNT_PROVIDERS</td>
          <td class="code"><pre>{&#x27;apple&#x27;: {&#x27;APP&#x27;: {&#x27;certificate_key&#x27;: &#x27;********************&#x27;,
                   &#x27;client_id&#x27;: &#x27;&#x27;,
                   &#x27;key&#x27;: &#x27;********************&#x27;,
                   &#x27;secret&#x27;: &#x27;********************&#x27;}},
 &#x27;google&#x27;: {&#x27;AUTH_PARAMS&#x27;: &#x27;********************&#x27;,
            &#x27;SCOPE&#x27;: [&#x27;profile&#x27;, &#x27;email&#x27;]},
 &#x27;microsoft&#x27;: {&#x27;APP&#x27;: {&#x27;client_id&#x27;: &#x27;&#x27;,
                       &#x27;secret&#x27;: &#x27;********************&#x27;,
                       &#x27;tenant&#x27;: &#x27;common&#x27;},
               &#x27;SCOPE&#x27;: [&#x27;User.Read&#x27;, &#x27;email&#x27;]}}</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/app/staticfiles&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [PosixPath(&#x27;/app/templates&#x27;)],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TENANT_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.admin&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework_simplejwt&#x27;,
 &#x27;drf_spectacular&#x27;,
 &#x27;users&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TENANT_DOMAIN_MODEL</td>
          <td class="code"><pre>&#x27;core.Domain&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TENANT_MODEL</td>
          <td class="code"><pre>&#x27;core.Tenant&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WEB_PAGE_URL</td>
          <td class="code"><pre>&#x27;https://crm-frontend-react.vercel.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;auth_service.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      Youâ€™re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>
