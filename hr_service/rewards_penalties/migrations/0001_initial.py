# Generated by Django 4.2.25 on 2025-10-11 11:28

from django.db import migrations, models
import rewards_penalties.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False)),
                ('tenant_id', models.UUIDField(db_index=True)),
                ('tenant_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('employee_id', models.UUIDField(db_index=True)),
                ('employee_details', models.JSONField(validators=[rewards_penalties.models.validate_details_json])),
                ('date_issued', models.DateField(default=rewards_penalties.models.current_date)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('reason', models.TextField(max_length=1000)),
                ('description', models.TextField(blank=True, max_length=2000)),
                ('status', models.CharField(choices=[('pending', 'PENDING'), ('under_review', 'UNDER_REVIEW'), ('approved', 'APPROVED'), ('issued', 'ISSUED'), ('rejected', 'REJECTED'), ('resolved', 'RESOLVED'), ('cancelled', 'CANCELLED')], default='pending', max_length=20)),
                ('approver_id', models.UUIDField(blank=True, null=True)),
                ('approver_details', models.JSONField(blank=True, null=True, validators=[rewards_penalties.models.validate_details_json])),
                ('created_by_id', models.UUIDField()),
                ('created_by_details', models.JSONField(validators=[rewards_penalties.models.validate_details_json])),
                ('updated_by_id', models.UUIDField(blank=True, null=True)),
                ('updated_by_details', models.JSONField(blank=True, null=True, validators=[rewards_penalties.models.validate_details_json])),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('compliance_checklist', models.JSONField(blank=True, default=list, null=True, validators=[rewards_penalties.models.validate_compliance_checklist])),
                ('last_compliance_check', models.DateTimeField(blank=True, null=True)),
                ('checked_by_id', models.UUIDField(blank=True, null=True)),
                ('checked_by_details', models.JSONField(blank=True, default=dict, null=True, validators=[rewards_penalties.models.validate_details_json])),
                ('approval_workflow', models.JSONField(blank=True, default=dict, null=True, validators=[rewards_penalties.models.validate_approval_workflow])),
                ('current_approval_stage', models.IntegerField(default=0)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('evidence_file', models.FileField(blank=True, null=True, upload_to='evidence/%Y/%m/%d/')),
                ('evidence_file_url', models.URLField(blank=True, max_length=500, null=True)),
                ('notes', models.TextField(blank=True, max_length=500)),
                ('is_public', models.BooleanField(default=False)),
                ('impact_assessment', models.JSONField(blank=True, default=dict)),
                ('code', models.CharField(editable=False, max_length=50)),
                ('type', models.CharField(choices=[('bonus', 'BONUS'), ('promotion', 'PROMOTION'), ('recognition', 'RECOGNITION'), ('extra_pto', 'EXTRA_PTO'), ('gift_card', 'GIFT_CARD'), ('public_praise', 'PUBLIC_PRAISE'), ('training_opportunity', 'TRAINING_OPPORTUNITY'), ('other', 'OTHER')], default='bonus', max_length=50)),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_type', models.CharField(choices=[('monetary', 'Monetary'), ('points', 'Points')], default='monetary', max_length=20)),
                ('duration_days', models.PositiveIntegerField(blank=True, null=True)),
                ('announcement_channel', models.CharField(blank=True, max_length=100)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name_plural': 'Rewards',
                'unique_together': {('tenant_id', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Penalty',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False)),
                ('tenant_id', models.UUIDField(db_index=True)),
                ('tenant_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('employee_id', models.UUIDField(db_index=True)),
                ('employee_details', models.JSONField(validators=[rewards_penalties.models.validate_details_json])),
                ('date_issued', models.DateField(default=rewards_penalties.models.current_date)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('reason', models.TextField(max_length=1000)),
                ('description', models.TextField(blank=True, max_length=2000)),
                ('status', models.CharField(choices=[('pending', 'PENDING'), ('under_review', 'UNDER_REVIEW'), ('approved', 'APPROVED'), ('issued', 'ISSUED'), ('rejected', 'REJECTED'), ('resolved', 'RESOLVED'), ('cancelled', 'CANCELLED')], default='pending', max_length=20)),
                ('approver_id', models.UUIDField(blank=True, null=True)),
                ('approver_details', models.JSONField(blank=True, null=True, validators=[rewards_penalties.models.validate_details_json])),
                ('created_by_id', models.UUIDField()),
                ('created_by_details', models.JSONField(validators=[rewards_penalties.models.validate_details_json])),
                ('updated_by_id', models.UUIDField(blank=True, null=True)),
                ('updated_by_details', models.JSONField(blank=True, null=True, validators=[rewards_penalties.models.validate_details_json])),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('compliance_checklist', models.JSONField(blank=True, default=list, null=True, validators=[rewards_penalties.models.validate_compliance_checklist])),
                ('last_compliance_check', models.DateTimeField(blank=True, null=True)),
                ('checked_by_id', models.UUIDField(blank=True, null=True)),
                ('checked_by_details', models.JSONField(blank=True, default=dict, null=True, validators=[rewards_penalties.models.validate_details_json])),
                ('approval_workflow', models.JSONField(blank=True, default=dict, null=True, validators=[rewards_penalties.models.validate_approval_workflow])),
                ('current_approval_stage', models.IntegerField(default=0)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('evidence_file', models.FileField(blank=True, null=True, upload_to='evidence/%Y/%m/%d/')),
                ('evidence_file_url', models.URLField(blank=True, max_length=500, null=True)),
                ('notes', models.TextField(blank=True, max_length=500)),
                ('is_public', models.BooleanField(default=False)),
                ('impact_assessment', models.JSONField(blank=True, default=dict)),
                ('code', models.CharField(editable=False, max_length=50)),
                ('type', models.CharField(choices=[('verbal_warning', 'VERBAL_WARNING'), ('written_warning', 'WRITTEN_WARNING'), ('performance_improvement_plan', 'PERFORMANCE_IMPROVEMENT_PLAN'), ('suspension', 'SUSPENSION'), ('demotion', 'DEMOTION'), ('termination', 'TERMINATION'), ('other', 'OTHER')], default='verbal_warning', max_length=50)),
                ('severity_level', models.PositiveSmallIntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High')], default=1)),
                ('duration_days', models.PositiveIntegerField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('probation_period_months', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('corrective_action_plan', models.JSONField(blank=True, default=dict)),
                ('escalation_history', models.JSONField(blank=True, default=list)),
                ('legal_compliance_notes', models.TextField(blank=True, max_length=1000)),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name_plural': 'Penalties',
                'unique_together': {('tenant_id', 'code')},
            },
        ),
    ]
