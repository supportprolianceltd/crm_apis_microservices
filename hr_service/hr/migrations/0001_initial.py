# Generated by Django 4.2.25 on 2025-10-08 04:26

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('requires_acknowledgment', models.BooleanField(default=True)),
                ('quiz_required', models.BooleanField(default=False)),
                ('quiz_questions', models.JSONField(blank=True, default=list)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Policies',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('review_date', models.DateField()),
                ('score', models.FloatField()),
                ('feedback', models.TextField()),
                ('supervisor_id', models.UUIDField(blank=True, null=True)),
                ('training_completed', models.BooleanField(default=False)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Performance Reviews',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('max_days', models.PositiveIntegerField(default=0)),
                ('is_paid', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=True)),
                ('carry_over_allowed', models.BooleanField(default=False)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('days_requested', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('approved_by_id', models.UUIDField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('bradford_factor', models.FloatField(blank=True, null=True)),
                ('self_cert_form_sent', models.BooleanField(default=False)),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.leavetype')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Leave Requests',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EscalationAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(choices=[('overdue_document', 'Overdue Document'), ('probation_end', 'Probation End'), ('rtw_interview', 'RTW Interview'), ('high_bradford', 'High Bradford Factor'), ('disciplinary_warning', 'Disciplinary Warning'), ('unsubmitted_leave', 'Unsubmitted Leave'), ('self_cert_overdue', 'Self-Cert Overdue')], max_length=50)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Escalation Alerts',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('item_name', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=50)),
                ('issued_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('is_returned', models.BooleanField(default=False)),
                ('acceptance_signed', models.BooleanField(default=False)),
                ('rfid_tag', models.CharField(blank=True, max_length=50)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Equipment',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeRelationCase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('closed', 'Closed')], default='open', max_length=20)),
                ('assigned_to_id', models.UUIDField(blank=True, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'ER Cases',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DisciplinaryWarning',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.TextField()),
                ('issued_date', models.DateField()),
                ('expires_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Disciplinary Warnings',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract')], max_length=20)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('probation_days', models.PositiveIntegerField(default=90)),
                ('is_signed', models.BooleanField(default=False)),
                ('signed_at', models.DateTimeField(blank=True, null=True)),
                ('document_id', models.UUIDField(blank=True, null=True)),
                ('probation_status', models.CharField(default='in_progress', max_length=20)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Contracts',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StarterLeaver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(choices=[('starter', 'Starter'), ('leaver', 'Leaver')], max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('reason', models.TextField(blank=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Starters/Leavers',
                'abstract': False,
                'indexes': [models.Index(fields=['tenant', 'user_id'], name='hr_starterl_tenant__bc8c93_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProbationPeriod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('passed', 'Passed'), ('failed', 'Failed')], default='in_progress', max_length=20)),
                ('review_notes', models.TextField(blank=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Probation Periods',
                'abstract': False,
                'indexes': [models.Index(fields=['tenant', 'user_id'], name='hr_probatio_tenant__d02f6e_idx')],
            },
        ),
        migrations.CreateModel(
            name='PolicyAcknowledgment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True, verbose_name='User ID from auth_service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by_id', models.CharField(blank=True, max_length=100, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('quiz_score', models.FloatField(blank=True, null=True)),
                ('is_compliant', models.BooleanField(default=False)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.policy')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='core.tenant')),
            ],
            options={
                'verbose_name_plural': 'Policy Acknowledgments',
                'abstract': False,
                'indexes': [models.Index(fields=['tenant', 'user_id'], name='hr_policyac_tenant__c53cff_idx')],
                'unique_together': {('user_id', 'policy', 'tenant')},
            },
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['tenant', 'user_id'], name='hr_policy_tenant__1f229b_idx'),
        ),
        migrations.AddIndex(
            model_name='performancereview',
            index=models.Index(fields=['tenant', 'user_id'], name='hr_performa_tenant__e0468e_idx'),
        ),
        migrations.AddIndex(
            model_name='leavetype',
            index=models.Index(fields=['tenant', 'user_id'], name='hr_leavetyp_tenant__da03df_idx'),
        ),
        migrations.AddIndex(
            model_name='leaverequest',
            index=models.Index(fields=['tenant', 'user_id'], name='hr_leavereq_tenant__76cca6_idx'),
        ),
        migrations.AddIndex(
            model_name='escalationalert',
            index=models.Index(fields=['tenant', 'user_id'], name='hr_escalati_tenant__a61d07_idx'),
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['tenant', 'user_id'], name='hr_equipmen_tenant__a5b3f0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='equipment',
            unique_together={('tenant', 'serial_number')},
        ),
        migrations.AddIndex(
            model_name='employeerelationcase',
            index=models.Index(fields=['tenant', 'user_id'], name='hr_employee_tenant__6b44ce_idx'),
        ),
        migrations.AddIndex(
            model_name='disciplinarywarning',
            index=models.Index(fields=['tenant', 'user_id'], name='hr_discipli_tenant__341cfa_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['tenant', 'user_id'], name='hr_contract_tenant__30868e_idx'),
        ),
    ]
