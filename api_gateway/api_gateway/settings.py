"""
Django settings for api_gateway project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ
# Allow underscores in hostnames
import re
from django.conf import settings
from django.http import HttpRequest
from django.core.handlers.wsgi import WSGIRequest

# Monkey patch to allow underscores in hostnames
original_get_host = HttpRequest.get_host

def get_host(self):
    host = original_get_host(self)
    if '_' in host:
        # Return the host even with underscores
        return host
    return host

HttpRequest.get_host = get_host
WSGIRequest.get_host = get_host


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$jqc+rt9j)0$1g)&ogr7ssxm27z0qdhp%h#&*nq$z$g)57cbb-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

env = environ.Env(
    ALLOWED_HOSTS=(list, []),
)
environ.Env.read_env(BASE_DIR / '.env')


ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=["localhost", "127.0.0.1", "talent_engine"])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'gateway',
    'corsheaders',
    'django_ratelimit',  # <-- change this from 'ratelimit'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api_gateway.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api_gateway.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{asctime} {levelname} {name} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'gateway.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'gateway': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MICROSERVICE_URLS = {
    "auth_service": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "applications-engine": env.str("JOB_APPLICATIONS_URL", default="http://job-applications:8003"),
    "talent-engine": env.str("TALENT_ENGINE_URL", default="http://talent-engine:8002"),
    "token": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "public-key": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "token/refresh": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "token/validate": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "login": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "logout": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "verify-2fa": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "docs": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "doc": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "user": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),
    "tenant": env.str("AUTH_SERVICE_URL", default="http://auth-service:8001"),  # <--- Add this line
}



# docker exec -it api_gateway python manage.py check

#CORS_ALLOW_ALL_ORIGINS = True  # For development only! Use CORS_ALLOWED_ORIGINS in production.

# Or, for production, use:
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "https://crm-frontend-react.vercel.app",
    "http://localhost:8000",
]